<Application x:Class="Resocentro_Desktop.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Resocentro_Desktop.Complemento"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" 
            Startup="App_Startup"
             >
    <!--StartupUri="Window1.xaml"-->
    <!--Startup="App_Startup"-->
    <!--StartupUri="MainWindow.xaml"-->
    <Application.Resources>

        <ResourceDictionary  
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:system="clr-namespace:System;assembly=mscorlib"
            xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation" >
            <ResourceDictionary.MergedDictionaries>

                <ResourceDictionary Source="/Telerik.Windows.Themes.Office2013;component/Themes/Telerik.Windows.Controls.xaml" />
                <ResourceDictionary Source="/Telerik.Windows.Themes.Office2013;component/Themes/Telerik.Windows.Controls.Data.xaml" />
                <ResourceDictionary Source="/Telerik.Windows.Themes.Office2013;component/Themes/Telerik.Windows.Controls.GridView.xaml" />
                <ResourceDictionary Source="/Telerik.Windows.Themes.Office2013;component/Themes/Telerik.Windows.Controls.ScheduleView.xaml" />
                <ResourceDictionary Source="/Telerik.Windows.Themes.Office2013;component//Themes/Telerik.Windows.Controls.Navigation.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--FF32547A-->
            <SolidColorBrush x:Key="Windows.Background" Color="#FF32547A"/>


            <LinearGradientBrush x:Key="GridView_RowIndicatorCellBackground_Selected" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="White" Offset="0"/>
                <GradientStop Color="#FFE4E4E4" Offset="1"/>
            </LinearGradientBrush>

            <Style x:Key="{x:Type telerik:RadGridView}" TargetType="{x:Type telerik:RadGridView}">
                <Setter Property="GroupPanelForeground" Value="Black"/>
                <Setter Property="GroupPanelForeground" Value="Black"/>

            </Style>

            <Style  x:Key="{x:Type telerik:GridViewGroupRow}" TargetType="{x:Type telerik:GridViewGroupRow}" >
                <Setter Property="Foreground" Value="Black"/>
            </Style>

            <local:BrushColorConverter x:Key="BConverter"/>

            <local:ValueBoolConverter x:Key="isReadyOnly"></local:ValueBoolConverter>
            <Style TargetType="{x:Type Label}">
                <Setter Property="Foreground" Value="#FFB8B8B8"></Setter>
                <Setter Property="FontWeight" Value="Bold"></Setter>
            </Style>
            <Style TargetType="{x:Type CheckBox}">
                <Setter Property="Foreground" Value="Black"></Setter>
            </Style>



            <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="CaretBrush" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                            <Border BorderBrush="White" Background="{StaticResource Windows.Background}"
				BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="3">
                                <ScrollViewer x:Name="PART_ContentHost"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Value="#FF5A6E83" Property="Background" />
                                    <Setter Value="#FFA2F5F2" Property="Foreground" />
                                    <Setter TargetName="PART_ContentHost" Property="Background" Value="#FF5A6E83"/>
                                </Trigger>
                                <Trigger Property="IsReadOnly" Value="True">
                                    <Setter Value="#FF5A6E83" Property="Background" />
                                    <Setter Value="#FFA2F5F2" Property="Foreground" />
                                    <Setter TargetName="PART_ContentHost" Property="Background" Value="#7F5A6E83"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type telerik:RadNumericUpDown}" TargetType="{x:Type telerik:RadNumericUpDown}">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="{StaticResource Windows.Background}"/>

            </Style>
            <Style x:Key="{x:Type PasswordBox}" TargetType="{x:Type PasswordBox}">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="CaretBrush" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                            <Border Background="{DynamicResource Windows.Background}" BorderBrush="White"
				BorderThickness="{TemplateBinding BorderThickness}"  CornerRadius="3">
                                <ScrollViewer x:Name="PART_ContentHost"/>

                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="2"
                  Background="{DynamicResource Windows.Background}"
                  BorderBrush="White"
                  BorderThickness="1" />
                    <Border 
                  Grid.Column="0"
                  CornerRadius="2" 
                  Margin="1" 
                  Background="{DynamicResource Windows.Background}" 
                  BorderBrush="White"
                  BorderThickness="0,0,1,0" />
                    <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
                </Grid>
                <!--<ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#808080" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#E0E0E0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>-->
            </ControlTemplate>

            <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
                <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
            </ControlTemplate>

            <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="MinWidth" Value="120"/>
                <Setter Property="MinHeight" Value="20"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                                </ToggleButton>
                                <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                                <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="{DynamicResource Windows.Background}"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}" BorderBrush="White"/>
                                <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                                    <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border 
                                x:Name="DropDownBorder"
                                Background="{DynamicResource Windows.Background}"

                                BorderThickness="1"
                                BorderBrush="White"/>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#FF4777AC"/>
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </Trigger>
                                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                    <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                                    <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                                </Trigger>
                                <Trigger Property="IsEditable"  Value="true">
                                    <Setter Property="IsTabStop" Value="false"/>
                                    <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                </Style.Triggers>
            </Style>

            <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#FF4777AC"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#FF4777AC"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- -->















            <SolidColorBrush x:Key="Button.Static.Background" Color="#FF205591"/>
            <SolidColorBrush x:Key="Button.Static.Border" Color="#FFD6DDE6"/>
            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF527CAC"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FFD6DDE6"/>
            <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FFD6DDE6"/>
            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FF10345D"/>
            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FF10345D"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="White"/>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF125093" Offset="0"/>
                            <GradientStop Color="#FF125093" Offset="1"/>
                            <GradientStop Color="#FF3176C3" Offset="0.5"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="#ffffff"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="10,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" CornerRadius="3">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type Window}">
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="Background" Value="{DynamicResource Windows.Background}"/>
            </Style>

            <!--<Style TargetType="{x:Type TextBox}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}"/>
            </Style>-->

            <Style x:Key="MyFocusVisual" TargetType="{x:Type Control}">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border Name="Border" BorderThickness="3" BorderBrush="#FFE0D456">
                                <Border.Triggers>
                                    <EventTrigger RoutedEvent="Window.Loaded">
                                        <BeginStoryboard >
                                            <Storyboard  RepeatBehavior="Forever">
                                                <DoubleAnimation 
                 Storyboard.TargetProperty="Opacity"
                 From="0.5" To="1" 
                 AutoReverse="True" Duration="0:0:0.4"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Border.Triggers>
                            </Border>
                            <!--<Rectangle  StrokeThickness="3" StrokeDashArray="4 2" Stroke="LawnGreen">
                                <Rectangle.Triggers>
                                    <EventTrigger RoutedEvent="Window.Loaded">
                                        <BeginStoryboard >
                                            <Storyboard  RepeatBehavior="Forever">
                                                <DoubleAnimation 
                 Storyboard.TargetProperty="Opacity"
                 From="0.5" To="1" 
                 AutoReverse="True" Duration="0:0:0.4"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Rectangle.Triggers>
                            </Rectangle>-->

                        </ControlTemplate>

                    </Setter.Value>

                </Setter>
            </Style>




        </ResourceDictionary>
    </Application.Resources>
</Application>
