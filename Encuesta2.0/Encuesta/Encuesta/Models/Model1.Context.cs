//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Encuesta.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Core.Objects;
    using System.Data.Entity.Infrastructure;
    /*using System.Data.Objects;
        using System.Data.Objects.DataClasses;*/
    using System.Linq;
    
    public partial class DATABASEGENERALEntities : DbContext
    {
        public DATABASEGENERALEntities()
            : base("name=DATABASEGENERALEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Aplicativo> Aplicativo { get; set; }
        public DbSet<EMPLEADO> EMPLEADO { get; set; }
        public DbSet<Notificaciones> Notificaciones { get; set; }
        public DbSet<Permiso> Permiso { get; set; }
        public DbSet<HISTORIA_CLINICA_CEREBRO> HISTORIA_CLINICA_CEREBRO { get; set; }
        public DbSet<DOCESCANEADO> DOCESCANEADO { get; set; }
        public DbSet<ESCANADMISION> ESCANADMISION { get; set; }
        public DbSet<ESTUDIO> ESTUDIO { get; set; }
        public DbSet<CLINICAHOSPITAL> CLINICAHOSPITAL { get; set; }
        public DbSet<COMPANIASEGURO> COMPANIASEGURO { get; set; }
        public DbSet<Encuesta> Encuesta { get; set; }
        public DbSet<MED_PRE_ENTREVISTA> MED_PRE_ENTREVISTA { get; set; }
        public DbSet<INTEGRACION> INTEGRACION { get; set; }
        public DbSet<ESTUDIO_COMPANIA> ESTUDIO_COMPANIA { get; set; }
        public DbSet<REGISTRODETECNICA> REGISTRODETECNICA { get; set; }
        public DbSet<POSTPROCESO> POSTPROCESO { get; set; }
        public DbSet<Equipo_PostProceso> Equipo_PostProceso { get; set; }
        public DbSet<MEDICOEXTERNO> MEDICOEXTERNO { get; set; }
        public DbSet<ATENCION> ATENCION { get; set; }
        public DbSet<Encuesta_Satisfaccion> Encuesta_Satisfaccion { get; set; }
        public DbSet<Estudio_PostProceso> Estudio_PostProceso { get; set; }
        public DbSet<Tipo_Permiso> Tipo_Permiso { get; set; }
        public DbSet<SUCURSAL> SUCURSAL { get; set; }
        public DbSet<HISTORIA_CLINICA_ABDOMEN> HISTORIA_CLINICA_ABDOMEN { get; set; }
        public DbSet<HISTORIA_CLINICA_CADERA> HISTORIA_CLINICA_CADERA { get; set; }
        public DbSet<HISTORIA_CLINICA_CODO> HISTORIA_CLINICA_CODO { get; set; }
        public DbSet<HISTORIA_CLINICA_COLUMNA_A> HISTORIA_CLINICA_COLUMNA_A { get; set; }
        public DbSet<HISTORIA_CLINICA_COLUMNA_B> HISTORIA_CLINICA_COLUMNA_B { get; set; }
        public DbSet<HISTORIA_CLINICA_COLUMNA_C> HISTORIA_CLINICA_COLUMNA_C { get; set; }
        public DbSet<HISTORIA_CLINICA_EXTREMIDAD> HISTORIA_CLINICA_EXTREMIDAD { get; set; }
        public DbSet<HISTORIA_CLINICA_MAMA> HISTORIA_CLINICA_MAMA { get; set; }
        public DbSet<HISTORIA_CLINICA_MANO> HISTORIA_CLINICA_MANO { get; set; }
        public DbSet<HISTORIA_CLINICA_ONCOLOGICO> HISTORIA_CLINICA_ONCOLOGICO { get; set; }
        public DbSet<HISTORIA_CLINICA_PIE> HISTORIA_CLINICA_PIE { get; set; }
        public DbSet<HISTORIA_CLINICA_RODILLA> HISTORIA_CLINICA_RODILLA { get; set; }
        public DbSet<HISTORIA_CLINICA_TEM_AORTA> HISTORIA_CLINICA_TEM_AORTA { get; set; }
        public DbSet<HISTORIA_CLINICA_TEM_ARTERIAS> HISTORIA_CLINICA_TEM_ARTERIAS { get; set; }
        public DbSet<HISTORIA_CLINICA_TEM_CEREBRAL> HISTORIA_CLINICA_TEM_CEREBRAL { get; set; }
        public DbSet<HISTORIA_CLINICA_TEM_COLONOSCOPIA> HISTORIA_CLINICA_TEM_COLONOSCOPIA { get; set; }
        public DbSet<HISTORIA_CLINICA_TEM_MUSCULO> HISTORIA_CLINICA_TEM_MUSCULO { get; set; }
        public DbSet<CLASE> CLASE { get; set; }
        public DbSet<CARTAGARANTIA> CARTAGARANTIA { get; set; }
        public DbSet<Insumo_Cum_Sunasa> Insumo_Cum_Sunasa { get; set; }
        public DbSet<CARGO> CARGO { get; set; }
        public DbSet<HISTORIA_CLINICA_HOMBRO> HISTORIA_CLINICA_HOMBRO { get; set; }
        public DbSet<HISTORIA_CLINICA_TEM_NEUROCEREBRO> HISTORIA_CLINICA_TEM_NEUROCEREBRO { get; set; }
        public DbSet<HISTORIA_CLINICA_TEM_CEREBRO> HISTORIA_CLINICA_TEM_CEREBRO { get; set; }
        public DbSet<HISTORIA_CLINICA_TEM_GENERICA> HISTORIA_CLINICA_TEM_GENERICA { get; set; }
        public DbSet<TKT_Ticketera> TKT_Ticketera { get; set; }
        public DbSet<HONORARIOTECNOLOGO> HONORARIOTECNOLOGO { get; set; }
        public DbSet<INFORMEMEDICO> INFORMEMEDICO { get; set; }
        public DbSet<ExamenAmpliacion> ExamenAmpliacion { get; set; }
        public DbSet<EQUIPO> EQUIPO { get; set; }
        public DbSet<Motivo_Entre_Turno> Motivo_Entre_Turno { get; set; }
        public DbSet<Solicitud_Entre_Turno> Solicitud_Entre_Turno { get; set; }
        public DbSet<HORARIO> HORARIO { get; set; }
        public DbSet<PACIENTE> PACIENTE { get; set; }
        public DbSet<Contraste> Contraste { get; set; }
        public DbSet<USUARIO> USUARIO { get; set; }
        public DbSet<Visor> Visor { get; set; }
        public DbSet<Detalle_Contraste> Detalle_Contraste { get; set; }
        public DbSet<AL_Insum> AL_Insum { get; set; }
        public DbSet<SegUsuarioXRol> SegUsuarioXRol { get; set; }
        public DbSet<ExamenXEvento> ExamenXEvento { get; set; }
        public DbSet<Sedacion> Sedacion { get; set; }
        public DbSet<Detalle_Sedacion> Detalle_Sedacion { get; set; }
        public DbSet<EventosImpax> EventosImpax { get; set; }
        public DbSet<Insti_Prom_Medico> Insti_Prom_Medico { get; set; }
        public DbSet<SUCURSALXUSUARIO> SUCURSALXUSUARIO { get; set; }
        public DbSet<UNIDADNEGOCIO> UNIDADNEGOCIO { get; set; }
        public DbSet<Calificacion_Paciente> Calificacion_Paciente { get; set; }
        public DbSet<EXAMENXCITA> EXAMENXCITA { get; set; }
        public DbSet<EXAMENXATENCION> EXAMENXATENCION { get; set; }
        public DbSet<CITA> CITA { get; set; }
        public DbSet<HISTORIA_CLINICA_GENERICA_EMETAC> HISTORIA_CLINICA_GENERICA_EMETAC { get; set; }
        public DbSet<ESPECIALIDAD> ESPECIALIDAD { get; set; }
        public DbSet<HISTORIA_CLINICA_FIBROSCAN> HISTORIA_CLINICA_FIBROSCAN { get; set; }
        public DbSet<EmpresaServicio> EmpresaServicio { get; set; }
        public DbSet<IncidenteEquipo> IncidenteEquipo { get; set; }
        public DbSet<PiezasRevision> PiezasRevision { get; set; }
        public DbSet<RevisionIncidente> RevisionIncidente { get; set; }
        public DbSet<AdjuntoIncidente> AdjuntoIncidente { get; set; }
        public DbSet<SupervisarEncuesta> SupervisarEncuesta { get; set; }
    
        public virtual int integrador(Nullable<int> numeroexamen, string equipo)
        {
            var numeroexamenParameter = numeroexamen.HasValue ?
                new ObjectParameter("numeroexamen", numeroexamen) :
                new ObjectParameter("numeroexamen", typeof(int));
    
            var equipoParameter = equipo != null ?
                new ObjectParameter("equipo", equipo) :
                new ObjectParameter("equipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("integrador", numeroexamenParameter, equipoParameter);
        }
    
        public virtual ObjectResult<sp_mover_encuesta_Result> sp_mover_encuesta(Nullable<int> examennew, Nullable<int> examenold)
        {
            var examennewParameter = examennew.HasValue ?
                new ObjectParameter("examennew", examennew) :
                new ObjectParameter("examennew", typeof(int));
    
            var examenoldParameter = examenold.HasValue ?
                new ObjectParameter("examenold", examenold) :
                new ObjectParameter("examenold", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_mover_encuesta_Result>("sp_mover_encuesta", examennewParameter, examenoldParameter);
        }
    
        public virtual ObjectResult<spu_getReporteEncuestadores_Result> spu_getReporteEncuestadores(string inicio, string fin)
        {
            var inicioParameter = inicio != null ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(string));
    
            var finParameter = fin != null ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spu_getReporteEncuestadores_Result>("spu_getReporteEncuestadores", inicioParameter, finParameter);
        }
    
        public virtual ObjectResult<spu_getReporteSupervisores_Result> spu_getReporteSupervisores(string inicio, string fin)
        {
            var inicioParameter = inicio != null ?
                new ObjectParameter("inicio", inicio) :
                new ObjectParameter("inicio", typeof(string));
    
            var finParameter = fin != null ?
                new ObjectParameter("fin", fin) :
                new ObjectParameter("fin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spu_getReporteSupervisores_Result>("spu_getReporteSupervisores", inicioParameter, finParameter);
        }
    
        public virtual int spu_verificarTurno_Supervision(Nullable<int> codigo, string grupo, string codigousuario)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            var grupoParameter = grupo != null ?
                new ObjectParameter("grupo", grupo) :
                new ObjectParameter("grupo", typeof(string));
    
            var codigousuarioParameter = codigousuario != null ?
                new ObjectParameter("codigousuario", codigousuario) :
                new ObjectParameter("codigousuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spu_verificarTurno_Supervision", codigoParameter, grupoParameter, codigousuarioParameter);
        }
    
        public virtual ObjectResult<spu_getIfIsAmpliInDemand_byCodigoAmpliacion_Ultimo_Result> spu_getIfIsAmpliInDemand_byCodigoAmpliacion_Ultimo(Nullable<int> codigoEstudioAmpliacion)
        {
            var codigoEstudioAmpliacionParameter = codigoEstudioAmpliacion.HasValue ?
                new ObjectParameter("codigoEstudioAmpliacion", codigoEstudioAmpliacion) :
                new ObjectParameter("codigoEstudioAmpliacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spu_getIfIsAmpliInDemand_byCodigoAmpliacion_Ultimo_Result>("spu_getIfIsAmpliInDemand_byCodigoAmpliacion_Ultimo", codigoEstudioAmpliacionParameter);
        }
    
        public virtual ObjectResult<spu_getIfIsAmpliInDemand_byCodigoEstudio_Result> spu_getIfIsAmpliInDemand_byCodigoEstudio(Nullable<int> codigo)
        {
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("codigo", codigo) :
                new ObjectParameter("codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spu_getIfIsAmpliInDemand_byCodigoEstudio_Result>("spu_getIfIsAmpliInDemand_byCodigoEstudio", codigoParameter);
        }
    
        public virtual ObjectResult<spu_getIfIsAmpliInDemand_byCodigo_Ultimo_Result> spu_getIfIsAmpliInDemand_byCodigo_Ultimo(Nullable<int> codigoEstudioOriginal)
        {
            var codigoEstudioOriginalParameter = codigoEstudioOriginal.HasValue ?
                new ObjectParameter("codigoEstudioOriginal", codigoEstudioOriginal) :
                new ObjectParameter("codigoEstudioOriginal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spu_getIfIsAmpliInDemand_byCodigo_Ultimo_Result>("spu_getIfIsAmpliInDemand_byCodigo_Ultimo", codigoEstudioOriginalParameter);
        }
    
        public virtual int InsertEstudioArto(Nullable<int> examen)
        {
            var examenParameter = examen.HasValue ?
                new ObjectParameter("examen", examen) :
                new ObjectParameter("examen", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEstudioArto", examenParameter);
        }
    
        public virtual int spu_setAmpliacion(Nullable<int> original_codigo, Nullable<int> ampliacion_codigo)
        {
            var original_codigoParameter = original_codigo.HasValue ?
                new ObjectParameter("Original_codigo", original_codigo) :
                new ObjectParameter("Original_codigo", typeof(int));
    
            var ampliacion_codigoParameter = ampliacion_codigo.HasValue ?
                new ObjectParameter("Ampliacion_codigo", ampliacion_codigo) :
                new ObjectParameter("Ampliacion_codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spu_setAmpliacion", original_codigoParameter, ampliacion_codigoParameter);
        }
    }
}
