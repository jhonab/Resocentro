//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Resocentro_Desktop.DAO
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DATABASEGENERALEntities : DbContext
    {
        public DATABASEGENERALEntities()
            : base("name=DATABASEGENERALEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Permiso> Permiso { get; set; }
        public virtual DbSet<SUCURSAL> SUCURSAL { get; set; }
        public virtual DbSet<USUARIO> USUARIO { get; set; }
        public virtual DbSet<EMPLEADO> EMPLEADO { get; set; }
        public virtual DbSet<CARGO> CARGO { get; set; }
        public virtual DbSet<SUCURSALXUSUARIO> SUCURSALXUSUARIO { get; set; }
        public virtual DbSet<UNIDADNEGOCIO> UNIDADNEGOCIO { get; set; }
        public virtual DbSet<CLINICAHOSPITAL> CLINICAHOSPITAL { get; set; }
        public virtual DbSet<ESTUDIO> ESTUDIO { get; set; }
        public virtual DbSet<ESTUDIO_COMPANIA> ESTUDIO_COMPANIA { get; set; }
        public virtual DbSet<PACIENTE> PACIENTE { get; set; }
        public virtual DbSet<CG_Log> CG_Log { get; set; }
        public virtual DbSet<COMPANIASEGURO> COMPANIASEGURO { get; set; }
        public virtual DbSet<DETALLEPROFORMA> DETALLEPROFORMA { get; set; }
        public virtual DbSet<CLASE> CLASE { get; set; }
        public virtual DbSet<CG_SolicituCarta_Historial> CG_SolicituCarta_Historial { get; set; }
        public virtual DbSet<PROFORMA> PROFORMA { get; set; }
        public virtual DbSet<CG_SolicitudCarta> CG_SolicitudCarta { get; set; }
        public virtual DbSet<CIE> CIE { get; set; }
        public virtual DbSet<SitedProducto> SitedProducto { get; set; }
        public virtual DbSet<Sunasa_Cobertura> Sunasa_Cobertura { get; set; }
        public virtual DbSet<DOCESCANEADO> DOCESCANEADO { get; set; }
        public virtual DbSet<ATENCION> ATENCION { get; set; }
        public virtual DbSet<CITA> CITA { get; set; }
        public virtual DbSet<EQUIPO> EQUIPO { get; set; }
        public virtual DbSet<EQUIPO_ESTUDIO> EQUIPO_ESTUDIO { get; set; }
        public virtual DbSet<AUDITORIA_CARTAS_GARANTIA> AUDITORIA_CARTAS_GARANTIA { get; set; }
        public virtual DbSet<EXAMENXATENCION> EXAMENXATENCION { get; set; }
        public virtual DbSet<HORARIO> HORARIO { get; set; }
        public virtual DbSet<FIZCALIZACION> FIZCALIZACION { get; set; }
        public virtual DbSet<ESCANADMISION> ESCANADMISION { get; set; }
        public virtual DbSet<TipoMedico> TipoMedico { get; set; }
        public virtual DbSet<Motivo_Entre_Turno> Motivo_Entre_Turno { get; set; }
        public virtual DbSet<Solicitud_Entre_Turno> Solicitud_Entre_Turno { get; set; }
        public virtual DbSet<ESTUDIO_CARTAGAR> ESTUDIO_CARTAGAR { get; set; }
        public virtual DbSet<MEDICOEXTERNO> MEDICOEXTERNO { get; set; }
        public virtual DbSet<Confirmacion_Cita> Confirmacion_Cita { get; set; }
        public virtual DbSet<CARTAGARANTIA> CARTAGARANTIA { get; set; }
        public virtual DbSet<Com_Medico> Com_Medico { get; set; }
        public virtual DbSet<CONTROL_SEDACION> CONTROL_SEDACION { get; set; }
        public virtual DbSet<AL_Almacen> AL_Almacen { get; set; }
        public virtual DbSet<AL_Enfermeria> AL_Enfermeria { get; set; }
        public virtual DbSet<AL_Insum> AL_Insum { get; set; }
        public virtual DbSet<AL_Stock_Current> AL_Stock_Current { get; set; }
        public virtual DbSet<AL_Stock_Diario> AL_Stock_Diario { get; set; }
        public virtual DbSet<AL_Stock_Item> AL_Stock_Item { get; set; }
        public virtual DbSet<ASEGURADORA> ASEGURADORA { get; set; }
        public virtual DbSet<UBIGEO> UBIGEO { get; set; }
        public virtual DbSet<SERIE> SERIE { get; set; }
        public virtual DbSet<MONEDA> MONEDA { get; set; }
        public virtual DbSet<TARJETA> TARJETA { get; set; }
        public virtual DbSet<RESULTADODELIVERY> RESULTADODELIVERY { get; set; }
        public virtual DbSet<TIPO_DOCUMENTO_IDENTIDAD> TIPO_DOCUMENTO_IDENTIDAD { get; set; }
        public virtual DbSet<ConfirmacionLecturaPago> ConfirmacionLecturaPago { get; set; }
        public virtual DbSet<EXAMENXCITA> EXAMENXCITA { get; set; }
        public virtual DbSet<DETALLEDOCUMENTO> DETALLEDOCUMENTO { get; set; }
        public virtual DbSet<LIBROCAJA> LIBROCAJA { get; set; }
        public virtual DbSet<DOCUMENTO> DOCUMENTO { get; set; }
        public virtual DbSet<COBRANZACIASEGURO> COBRANZACIASEGURO { get; set; }
        public virtual DbSet<DetalleFacturaGlobal> DetalleFacturaGlobal { get; set; }
        public virtual DbSet<FacturaGlobal> FacturaGlobal { get; set; }
        public virtual DbSet<TIPOCAMBIO> TIPOCAMBIO { get; set; }
        public virtual DbSet<FacturaDetalleLote> FacturaDetalleLote { get; set; }
        public virtual DbSet<FacturaLote> FacturaLote { get; set; }
        public virtual DbSet<TKT_Counter> TKT_Counter { get; set; }
        public virtual DbSet<TKT_Historial> TKT_Historial { get; set; }
        public virtual DbSet<TKT_List_Atencion> TKT_List_Atencion { get; set; }
        public virtual DbSet<TKT_Ticketera> TKT_Ticketera { get; set; }
        public virtual DbSet<TKT_Tipo_Atencion> TKT_Tipo_Atencion { get; set; }
        public virtual DbSet<DetalleReciboProvisional> DetalleReciboProvisional { get; set; }
        public virtual DbSet<ReciboProvisional> ReciboProvisional { get; set; }
        public virtual DbSet<CARGOINFORMES> CARGOINFORMES { get; set; }
        public virtual DbSet<DetalleResultadoDelivery> DetalleResultadoDelivery { get; set; }
        public virtual DbSet<Tipo_Adjunto> Tipo_Adjunto { get; set; }
        public virtual DbSet<ADJUNTO_CARTAGARANTIA> ADJUNTO_CARTAGARANTIA { get; set; }
        public virtual DbSet<FORMADEPAGO> FORMADEPAGO { get; set; }
        public virtual DbSet<Horario_Tecnologo> Horario_Tecnologo { get; set; }
        public virtual DbSet<VerificacionSunat> VerificacionSunat { get; set; }
    
        public virtual int InsertEstudioCaja(Nullable<int> cita, string codigoestudio)
        {
            var citaParameter = cita.HasValue ?
                new ObjectParameter("cita", cita) :
                new ObjectParameter("cita", typeof(int));
    
            var codigoestudioParameter = codigoestudio != null ?
                new ObjectParameter("codigoestudio", codigoestudio) :
                new ObjectParameter("codigoestudio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertEstudioCaja", citaParameter, codigoestudioParameter);
        }
    
        public virtual ObjectResult<spu_reporteCobranza_Result> spu_reporteCobranza(Nullable<System.DateTime> f1, Nullable<System.DateTime> f2, string fac_numerodocumento1, string fac_numerodocumento2, string bol_numerodocumento1, string bol_numerodocumento2, Nullable<int> codigounidad, Nullable<int> codigosucursal, Nullable<bool> buscarEntreRangos, string cre_numerodocumento1, string cre_numerodocumento2)
        {
            var f1Parameter = f1.HasValue ?
                new ObjectParameter("f1", f1) :
                new ObjectParameter("f1", typeof(System.DateTime));
    
            var f2Parameter = f2.HasValue ?
                new ObjectParameter("f2", f2) :
                new ObjectParameter("f2", typeof(System.DateTime));
    
            var fac_numerodocumento1Parameter = fac_numerodocumento1 != null ?
                new ObjectParameter("fac_numerodocumento1", fac_numerodocumento1) :
                new ObjectParameter("fac_numerodocumento1", typeof(string));
    
            var fac_numerodocumento2Parameter = fac_numerodocumento2 != null ?
                new ObjectParameter("fac_numerodocumento2", fac_numerodocumento2) :
                new ObjectParameter("fac_numerodocumento2", typeof(string));
    
            var bol_numerodocumento1Parameter = bol_numerodocumento1 != null ?
                new ObjectParameter("bol_numerodocumento1", bol_numerodocumento1) :
                new ObjectParameter("bol_numerodocumento1", typeof(string));
    
            var bol_numerodocumento2Parameter = bol_numerodocumento2 != null ?
                new ObjectParameter("bol_numerodocumento2", bol_numerodocumento2) :
                new ObjectParameter("bol_numerodocumento2", typeof(string));
    
            var codigounidadParameter = codigounidad.HasValue ?
                new ObjectParameter("codigounidad", codigounidad) :
                new ObjectParameter("codigounidad", typeof(int));
    
            var codigosucursalParameter = codigosucursal.HasValue ?
                new ObjectParameter("codigosucursal", codigosucursal) :
                new ObjectParameter("codigosucursal", typeof(int));
    
            var buscarEntreRangosParameter = buscarEntreRangos.HasValue ?
                new ObjectParameter("buscarEntreRangos", buscarEntreRangos) :
                new ObjectParameter("buscarEntreRangos", typeof(bool));
    
            var cre_numerodocumento1Parameter = cre_numerodocumento1 != null ?
                new ObjectParameter("cre_numerodocumento1", cre_numerodocumento1) :
                new ObjectParameter("cre_numerodocumento1", typeof(string));
    
            var cre_numerodocumento2Parameter = cre_numerodocumento2 != null ?
                new ObjectParameter("cre_numerodocumento2", cre_numerodocumento2) :
                new ObjectParameter("cre_numerodocumento2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spu_reporteCobranza_Result>("spu_reporteCobranza", f1Parameter, f2Parameter, fac_numerodocumento1Parameter, fac_numerodocumento2Parameter, bol_numerodocumento1Parameter, bol_numerodocumento2Parameter, codigounidadParameter, codigosucursalParameter, buscarEntreRangosParameter, cre_numerodocumento1Parameter, cre_numerodocumento2Parameter);
        }
    
        public virtual ObjectResult<reporte_produccionGrafica_Result> reporte_produccionGrafica(Nullable<int> ano, string empresa)
        {
            var anoParameter = ano.HasValue ?
                new ObjectParameter("ano", ano) :
                new ObjectParameter("ano", typeof(int));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<reporte_produccionGrafica_Result>("reporte_produccionGrafica", anoParameter, empresaParameter);
        }
    
        public virtual ObjectResult<reporte_VentasGrafica_Result> reporte_VentasGrafica(Nullable<int> ano, string empresa)
        {
            var anoParameter = ano.HasValue ?
                new ObjectParameter("ano", ano) :
                new ObjectParameter("ano", typeof(int));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("empresa", empresa) :
                new ObjectParameter("empresa", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<reporte_VentasGrafica_Result>("reporte_VentasGrafica", anoParameter, empresaParameter);
        }
    
        public virtual ObjectResult<RGVCAFACII_Result> RGVCAFACII(Nullable<int> year, Nullable<int> uni)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var uniParameter = uni.HasValue ?
                new ObjectParameter("uni", uni) :
                new ObjectParameter("uni", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RGVCAFACII_Result>("RGVCAFACII", yearParameter, uniParameter);
        }
    
        public virtual ObjectResult<RGVCAFAC_Result> RGVCAFAC(Nullable<System.DateTime> fechaIni, Nullable<System.DateTime> fechaFin, Nullable<int> uni)
        {
            var fechaIniParameter = fechaIni.HasValue ?
                new ObjectParameter("fechaIni", fechaIni) :
                new ObjectParameter("fechaIni", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var uniParameter = uni.HasValue ?
                new ObjectParameter("uni", uni) :
                new ObjectParameter("uni", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RGVCAFAC_Result>("RGVCAFAC", fechaIniParameter, fechaFinParameter, uniParameter);
        }
    
        public virtual ObjectResult<RGVFACTU_Result> RGVFACTU(Nullable<System.DateTime> fechaIni, Nullable<System.DateTime> fechaFin, Nullable<int> uni)
        {
            var fechaIniParameter = fechaIni.HasValue ?
                new ObjectParameter("fechaIni", fechaIni) :
                new ObjectParameter("fechaIni", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var uniParameter = uni.HasValue ?
                new ObjectParameter("uni", uni) :
                new ObjectParameter("uni", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RGVFACTU_Result>("RGVFACTU", fechaIniParameter, fechaFinParameter, uniParameter);
        }
    }
}
